m = matrix([[1,0,0,0,0],[1,1,1,1,1],[1,-1,1,-1,1],[1,2,4,8,16],[1,-2,4,-8,16]])
A = m.inverse()
def toom3(a,b):
    a = a.digits()
    b = b.digits()
    if len(a)==0 or len(b)==0:
        return 0
    if len(a)==1:
        v = 0
        for i in range(len(b)):
            v+=a[0]*b[i]*10^i
        return v
    if len(b)==1:
        v = 0
        for i in range(len(a)):
            v+=b[0]*a[i]*10^i
        return v
    if len(a) >= len(b):
        k = (len(a) + len(a) % 3)//3
    else:
        k=(len(b) + len(b) % 3)//3
    a0 = ZZ(a[:k],10)
    a1 = ZZ(a[k:2*k],10)
    a2 = ZZ(a[2*k:],10)
    b0 = ZZ(b[:k],10)
    b1 = ZZ(b[k:2*k],10)
    b2 = ZZ(b[2*k:],10)
    w0 = toom3(a0,b0)
    w1 = toom3(a0 + a1 + a2,b0 + b1 + b2)
    w2 = toom3(a0 - a1 + a2,b0 - b1 + b2)
    w3 = toom3(a0 + 2*a1 + 4*a2,b0 + 2*b1 + 4*b2)
    w4 = toom3(a0 - 2*a1 + 4*a2,b0 - 2*b1 + 4*b2)
    w = matrix([w0,w1,w2,w3,w4]).transpose()
    c = 0
    h = A*w
    for i in range(5):
        c+= h[i]*10^(i*3^(k-1))
    return c[0]
print(toom3(32,651))